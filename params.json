{"name":"Homport","body":"# homport\r\n\r\nHomport makes it easier to interact with [Houdini](http://sidefx.com) nodes in Python. Run it during interactive sessions to quickly wire up nodes, see the values of parameters, and more.\r\n\r\n## Usage\r\n### Connect nodes quickly:\r\n```python\r\n# connects output of 'node' to first input of 'node2'\r\nnode >> node2\r\n# connects output of 'node' to the second input of 'node2'\r\nnode >> node2.input_two\r\n```\r\n\r\n### Deal with parameters more easily:\r\n```python\r\n# set parameters using assignment\r\nnode.tx = 500\r\n# get values without calling eval()\r\nprint node.tx\r\n```\r\n\r\n### Link parameters together:\r\n```python\r\n# connect `ty` of nodeA to `tz` of nodeB\r\nnodeA.ty >> nodeB.tz\r\n```\r\n\r\n## Documentation\r\nDocumentation is done using pycco -- check it out [here](http://schworer.github.com/homport/docs/homport.html)\r\n\r\n## Installation\r\nYou can use [pip](http://pypi.python.org/pypi/pip) to install:\r\n\r\n    pip install -e git+git://github.com/schworer/homport.git@0.2#egg=homport\r\n\r\nIf you don't want to use pip, clone the repo and add it to your path\r\nmanually:\r\n\r\n    git clone git://github.com/schworer/homport homport/\r\n\r\nThen, put this in your 123.py or 456.py Houdini startup script:\r\n\r\n```python\r\nimport homport\r\nhomport.start()\r\n```\r\n\r\nor, import it directly in the Python pane within Houdini.\r\n\r\n### Run the unit tests:\r\n\r\n    hython test_homport.py\r\n","tagline":"Interact with Houdini more easily","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}